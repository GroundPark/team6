/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2021-12-12 10:08:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import vo.*;
import vo.*;

public final class admin_005fschedule_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/admin/../include/incAdmin.jsp", Long.valueOf(1639303678618L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


AdminScheduleInfo si = (AdminScheduleInfo)request.getAttribute("si");
// 달력 출력을 위한 정보(검색 연월, 현재 연월일)들을 저장하고 있는 인스턴스

ArrayList<AdminSchedule> scheduleList = (ArrayList<AdminSchedule>)request.getAttribute("scheduleList");
// 검색 연월에 해당하는 일정들의 목록을 저장하고 있는 ArrayList		

Calendar sdate = Calendar.getInstance();
sdate.set(si.getYear(), si.getMonth() - 1, 1);		// 달력 시작일 지정
Calendar edate = Calendar.getInstance();
edate.set(si.getYear(), si.getMonth(), 1);			// 달력 종료일로 다음달 1일로 지정
edate.add(Calendar.DATE, -1);						// 다음달 1일에서 하루를 뺀 날짜로 시작월의 말일을 지정
int sWeek = sdate.get(Calendar.DAY_OF_WEEK);		// 시작일의 요일 번호이자 1일의 시작 위치
int eDay = edate.get(Calendar.DATE);				// 말일
int eWeek = edate.get(Calendar.DAY_OF_WEEK);		// 말일의 요일 번호

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#sch table, #sch th, #sch td {border-bottom:1px solid black; text-align:center;}\r\n");
      out.write("#sch {border-collapse:collapse;}\r\n");
      out.write("#sch th {height:30px; background:#585858; color:white; font-weight:bold;}\r\n");
      out.write("#sch td {height:80px; text-align:left; font-weight:bold;}\r\n");
      out.write(".txtRed {color:red;}\r\n");
      out.write(".txtBlue {color:blue;}\r\n");
      out.write("#today {background:#efefef; font-weight:bold;}\r\n");
      out.write("#schManage { width:700px; margin-left:0; border:0px solid black;}\r\n");
      out.write("\r\n");
      out.write("/* div로 일정 보여주는 부분 */\r\n");
      out.write(".scheduleBox {\r\n");
      out.write("\twidth:400px; height:150px; background:#FFCC99;\tpadding:10px;\r\n");
      out.write("\toverflow:auto;\r\n");
      out.write("\tposition:absolute; top:150px; left:150px;  \r\n");
      out.write("\tdisplay:none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("function setToday() {\r\n");
      out.write("\tdocument.frmDate.y.value = \"");
      out.print(si.getcYear() );
      out.write("\";\r\n");
      out.write("\tdocument.frmDate.m.value = \"");
      out.print(si.getcMonth() );
      out.write("\";\r\n");
      out.write("\tdocument.frmDate.submit();\r\n");
      out.write("\t \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showSchedule(box) {\r\n");
      out.write("\tvar obj = document.getElementById(box);\r\n");
      out.write("\tobj.style.display = \"block\";\r\n");
      out.write("}\r\n");
      out.write("function hideSchedule(box) {\r\n");
      out.write("\tvar obj = document.getElementById(box);\r\n");
      out.write("\tobj.style.display = \"none\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function goDel(as_idx) {\r\n");
      out.write("\tif (confirm(\"정말 삭제하시겠습니까?\")) {\r\n");
      out.write("\t\tlocation.href=\"schedule_proc.sche?wtype=del&as_idx=\" + as_idx;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");

AdminInfo adminInfo = (AdminInfo)session.getAttribute("adminInfo");
if (adminInfo == null) {
	out.println("<script>");
	out.println("alert('잘못된 경로로 들어오셨습니다.');");
	out.println("history.back();");
	out.println("</script>");
	out.close();
}

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/admin_base.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/admin_layout.css\" />\r\n");
      out.write("<script src=\"../js/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"../js/admin.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"outerBack\">\r\n");
      out.write("\t<div id=\"innerBack\">\r\n");
      out.write("\t\t<!-- header 영역 시작 -->\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t\t<div id=\"logout\"><a href=\"admin_logout.jsp\">로그아웃</a></div>\r\n");
      out.write("\t\t\t<span id=\"title\" onclick=\"location.href='admin_mainPage.jsp'\" style=\"cursor:pointer\">관리자 모드</span>\r\n");
      out.write("\t\t\t<p id=\"titleeng\" onclick=\"location.href='admin_mainPage.jsp'\" style=\"cursor:pointer\">Administrator</p>\r\n");
      out.write("\t\t\t<div id=\"greeting\">");
      out.print(adminInfo.getAi_name() );
      out.write("님, 안녕하세요</div>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<!-- header 영역 종료 -->\r\n");
      out.write("\t\t<!-- nav 영역 시작 -->\r\n");
      out.write("\t\t<!-- 테스트하려고 임의로 넣었습니다  -->\r\n");
      out.write("\t\t<nav>\r\n");
      out.write("\t\t  <ul id=\"ac\">\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">일정 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"admin_mainPage.jsp\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;일정</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"schedule_form.sche?wtype=in\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;일정 등록</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">관리자 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;관리자 목록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;관리자 등록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;권한 설정</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">회원 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;회원 목록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;포인트 목록</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">상품 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"admin_pdt_list.adminpdt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;상품 목록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"admin_pdt_in_form.adminpdt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;상품 등록</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">도전펀딩 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"chal_list.admin\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;도전펀딩 목록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"chal_manage_reply.admin\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;도전펀딩 댓글 관리</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">펀딩 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"funding_list.admin\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;펀딩 목록</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"/lefthand/admin/admin_funding_in.jsp\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;펀딩 등록</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">주문 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"order_pdt.adminord\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;상품</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"order_fdg.adminord\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;펀딩</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">신고 관리</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;후기 신고</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;댓글 신고</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">고객센터</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;공지사항</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FAQ</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1:1 문의</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t\t <li class=\"menu1\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">통계</a>\r\n");
      out.write("\t\t\t\t<ul class=\"menu2\">\r\n");
      out.write("\t\t\t\t   <li><a href=\"member.stat\">&nbsp;&nbsp;&nbsp;회원별 통계</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"period.stat\">&nbsp;&nbsp;&nbsp;기간별 통계</a></li>\r\n");
      out.write("\t\t\t\t   <li><a href=\"fund.stat\">&nbsp;&nbsp;&nbsp;펀딩별 통계</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t </li>\r\n");
      out.write("\t\t  </ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t<!-- nav 영역 종료 -->\t\t\t\t\r\n");
      out.write("\t</div>\t\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<style>hr { display:block; }</style>\t\t\t\t<!-- reset.css에서 hr을 none으로 해놨는데 일정보여주는 div에서 hr이 필요함 -->\r\n");
      out.write("<main>\r\n");
      out.write("\t<article>\r\n");
      out.write("\t    <section>\r\n");
      out.write("\t\t\t<h2 id=\"schManage\">일정 관리</h2>\r\n");
      out.write("\t\t\t<form name=\"frmDate\" action=\"admin_mainPage.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t<p style=\"width:700px;\" align=\"center\">\r\n");
      out.write("\t\t\t\t<select name=\"y\"  onchange=\"this.form.submit();\">\r\n");
      out.write("\t\t\t");
 for (int i = 2020 ; i <= (si.getcYear() + 10) ; i++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(i );
      out.write('"');
      out.write(' ');
 if (i == si.getYear()) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i );
      out.write("</option>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</select>년 \r\n");
      out.write("\t\t\t\t<select name=\"m\" onchange=\"this.form.submit();\">\r\n");
      out.write("\t\t\t");
 for (int i = 1 ; i <= 12 ; i++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(i );
      out.write('"');
      out.write(' ');
 if (i == si.getMonth()) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i );
      out.write("</option>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</select>월 \r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"오늘 날짜\" onclick=\"setToday()\"/>\r\n");
      out.write("\t\t\t</p><br /><br />\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<table width=\"700\" cellpadding=\"5\" id=\"sch\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t<th width=\"100\">일</th><th width=\"100\">월</th><th width=\"100\">화</th><th width=\"100\">수</th>\r\n");
      out.write("\t\t\t<th width=\"100\">목</th><th width=\"100\">금</th><th width=\"100\">토</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			if (sWeek != 1) {
				out.println("<tr>");
				for (int i = 1 ; i < sWeek ; i++)	out.println("<td>&nbsp;</td>");
			}	// 1일의 위치가 처음이 아니면 1일의 위치 만큼 빈 칸으로 채움
			
			String lnk = "schedule_form.sche";
			String args = "";
			for (int i = 1, n = sWeek ; i <= eDay ; i++, n++) {
			// i : 날짜의 일(day) 부분을 담당할 변수로 날짜 출력에 사용됨 / n : 요일번호(1~7)로 일주일이 지나면 다음 줄로 내리기 위한 용도
				String txtCls = "", txtId = "";			// 여기서 선언 한 이유는 값이 필요없는 경우가 있어 초기화가 지속적으로 이루어져야 하기에
				// 해당 날짜 td에 적용 할 클래스와 아이디를 저장 할 변수 
				
				if (n % 7 == 1) {	// 현재 요일번호가 일요일(1)이면 새로운 줄 시작
					out.println("<tr>");
					txtCls =" class=\"txtRed\"";
				}
				if (n % 7 == 0) 	txtCls =" class=\"txtBlue\"";		// 현재 요일번호가 토요일(7)이면
				if (si.getYear() == si.getcYear() && si.getMonth() == si.getcMonth() && i == si.getcDay()) 	txtId = " id=\"today\"";
					
				String schImg = "", closeImg = "";		// 여기서 선언 한 이유는 값이 없는 경우가 있어 초기화가 지속적으로 이루어져야 하기에	
														// 스케쥴과 닫기 이미지를 링크과 함께 저장 할 변수로. 일정이 있을 경우에만 사용됨
														
				if (scheduleList.size() > 0) {			// 검색 연월에 해당하는 일정이 있을경우
					out.println("<div class='scheduleBox' id='box" + i + "'>");
					
					for(int j = 0 ; j < scheduleList.size() ; j++) {
						AdminSchedule as = scheduleList.get(j);
						String stime = si.getYear() + "-" + (si.getMonth() < 10 ? "0" + si.getMonth() : si.getMonth()) + 
								"-" + (i < 10 ? "0" + i : i);
						if (stime.equals(as.getAs_stime().substring(0, 10))) {				// 현재 출력할 날짜에 해당하는 일정이 있을경우
							args = "?wtype=up&y=" + si.getYear() + "&m=" + si.getMonth() + "&d=" + i + "&as_idx=" + as.getAs_idx();
							// 일정 수정시 필요한 쿼리스트링 생성
							schImg = "<a href=\"javascript:showSchedule('box" + i + "');\">";			// a태그 안에서 js쓰는 방법!!
							schImg += "<img src='../img/schedule_icon.png' width='20' style='margin-left:10px' /></a>";
							closeImg = "<a href=\"javascript:hideSchedule('box" + i + "');\">";			// a태그 안에서 js쓰는 방법!!
							closeImg += "<img src='../img/close.png' width='20' /></a><br /><br />";
							
							out.println(stime + " 일정<span style='margin-right:240px;'></span>" + closeImg);
							out.println("일시 : " + as.getAs_stime().substring(11) + "&nbsp;&nbsp;");
							out.println("<input type=\"button\" value=\"수정\" onclick=\"location.href='" + lnk + args + "';\" />");
							out.println("<input type=\"button\" value=\"삭제\" onclick=\"goDel(" + as.getAs_idx() + ");\" />");
							out.println("<br /><br /> " + as.getAs_content().replace("\r\n", "<br />"));
							out.println("<br /><br /><br /> 등록일 : " + as.getAs_date() + "<hr />");
						}
					}
				
					out.println("</div>");																
				}
				
				
				args = "?wtype=in&y=" + si.getYear() + "&m=" + si.getMonth() + "&d=" + i;
				out.println("<td valign='top'" + txtCls + txtId + "><a href='" +lnk + args + "'>" + i + "</a>");	// valign=top 이거 기억하기~!~! 글자가 상단배치 됨 
				out.println(schImg + "</td>");
				if (n % 7 == 0)	{ 
					out.println("</tr>");	// 현재 요일번호가 토요일(7)이면 다음 줄로 내림
				}
				else if (i == eDay && n % 7 != 0) {
				// 마지막 일(day)을 출력했으나 토요일이 아닐경우
					for (int j = n % 7 ; j < 7 ; j++) {
						out.println("<td>&nbsp;</td>");
					}
					out.println("</tr>");
				}
			}
			
      out.write("\r\n");
      out.write("\t\t\t</table> \r\n");
      out.write("\t   \t\t\r\n");
      out.write("\t    </section>\r\n");
      out.write("\t</article>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
