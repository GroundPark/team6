/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2021-12-13 02:12:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import java.util.*;
import vo.*;
import vo.*;

public final class pdt_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/page/product/../../include/footer.jsp", Long.valueOf(1639049464000L));
    _jspx_dependants.put("/page/product/../../include/header.jsp", Long.valueOf(1639294333316L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

request.setCharacterEncoding("utf-8");

ArrayList<ProductInfo> pdtList = (ArrayList<ProductInfo>)request.getAttribute("pdtList");
ArrayList<PdtCata> cataList = (ArrayList<PdtCata>)request.getAttribute("cataList");

PdtPageInfo pdtPageInfo = (PdtPageInfo)request.getAttribute("pdtPageInfo");

 String args ="", schargs = "";
 
// 검색관련 쿼리스트링 
if(pdtPageInfo.getKeyword() != null && !pdtPageInfo.getKeyword().equals(""))	
	schargs += "&keyword=" + pdtPageInfo.getKeyword();
if(pdtPageInfo.getCata() != null && !pdtPageInfo.getCata().equals(""))
	schargs += "&cata=" + pdtPageInfo.getCata();

args = "?cpage=" + pdtPageInfo.getCpage() + schargs; 
	

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\t<script src=\"js/jquery-3.6.0.js\"></script>\n");
      out.write("\t<script src=\"js/jquery-ui-1.10.3.custom.min.js\"></script>\n");
      out.write("</head>\t\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("#align { width:1160px; align:right; }\t\n");
      out.write("\n");
      out.write(".pdt_contents {\n");
      out.write("\twidth:1200px;  margin: 0 auto;\n");
      out.write("\toverflow:hidden;\n");
      out.write("\theight:100%;\t\t\n");
      out.write("\tpadding-bottom:300px;\n");
      out.write("\tposition:relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 통합 전 추가 */\n");
      out.write("\n");
      out.write(".pdt_contents a:link { color:black; text-decoration:none; }\t\n");
      out.write(".pdt_contents a:visited { color:black; text-decoration:none; }\n");
      out.write(".pdt_contents a:hover { color:black; text-decoration:none; font-weight:bold; }\n");
      out.write(".pdt_contents a:focus { color:black; text-decoration:none; }\n");
      out.write(".pdt_contents a:active { color:black; text-decoration:none; }\n");
      out.write("\n");
      out.write("a {text-decoration:none; }\n");
      out.write("\n");
      out.write("/* 통합 전 추가 */\n");
      out.write("\n");
      out.write("\n");
      out.write(".pdt { margin:30px 20px 0 20px; float:left; font-size:1.4em; }\n");
      out.write("\n");
      out.write("#pdt_img_box { position:relative; }\n");
      out.write("#pdt_img { border:1px solid black; }\n");
      out.write("#pdt_zzim {\n");
      out.write("\tposition:absolute;\n");
      out.write("\tbackground:none;\n");
      out.write("\tborder:0px solid #d1d1d1;\n");
      out.write("\toutline:none;\n");
      out.write("\ttop:90%;\n");
      out.write("\tleft:87%;\n");
      out.write("\twidth:35px;\n");
      out.write("\theight:30px;\n");
      out.write("\tpadding:0;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write(".pdt_title { margin-top:15px; }\n");
      out.write("#pdt_name { font-weight:bold; display:inline-block; margin-bottom:6px; text-align:right; }\n");
      out.write("#pdt_soldout { color:red; font-weight:bold; font-size:0.7em; }\n");
      out.write("\n");
      out.write("#pdt_price1 { \n");
      out.write("\ttext-decoration:line-through; color:gray; font-size:0.9em; display:inline-block; margin:0 10px 0 -30px; \n");
      out.write("}\n");
      out.write("#pdt_price2\t{ color:red; font-size:1.2em; display:inline-block; }\n");
      out.write("\n");
      out.write(".pdt_real_price { color:red; font-size:1.1em; }\n");
      out.write("\n");
      out.write(".page_wrapper {\n");
      out.write("\tposition:absolute;\n");
      out.write("\tleft:0%; bottom:5%;\n");
      out.write("\ttransform:translate(0%, -5%); \n");
      out.write("\twidth: 1200px; height: 60px; \n");
      out.write("\tpadding-top:50px;\n");
      out.write("\tpadding-bottom:50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("\tposition:relative;\n");
      out.write("\tpadding-bottom:0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".bold { font-weight:bold; }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("<header>\n");
      out.write("\r\n");
      out.write("\t<!-- 로그인 정보를 담은 인스턴스를 사용하기 위해 import -->\r\n");

request.setCharacterEncoding("utf-8");

String sch_kind = request.getParameter("sch_kind");
if (sch_kind == null)	sch_kind = "";

String keyword = request.getParameter("keyword");
if (keyword == null)	keyword = "";

MemberInfo memberInfo = (MemberInfo)session.getAttribute("memberInfo");
boolean isLogin = false;
if (memberInfo != null)	isLogin = true;

      out.write("\r\n");
      out.write("<!-- #header 영역 시작 -->\r\n");
      out.write("<!-- 모든 사이트에서 적용되는 css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/base.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/footer.css\" />\r\n");
      out.write("<script src=\"js/search.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("<div id=\"header\" class=\"header\">\r\n");
      out.write("\t<div id=\"logo\"><h1 class=\"logo\"><a href=\"index.jsp\"><img src=\"img/logo.png\" alt=\"로고\" class=\"logo\" /></a></h1></div>\r\n");
      out.write("\t<ul id=\"infoMenu\">\r\n");
 if(memberInfo == null) { 
      out.write("\r\n");
      out.write("\t\t<li><a href=\"#\">회원가입</a></li>\r\n");
      out.write("\t\t<li><a href=\"login_form.jsp\">로그인</a></li>\r\n");
      out.write("\t\t<li><a href=\"login_form.jsp?url=cart_list.ord\">장바구니</a></li>\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t<li>");
      out.print(memberInfo.getMi_name() );
      out.write(" 님, 안녕하세요.</li>\r\n");
      out.write("\t\t<li><a href=\"logout.jsp\">로그아웃</a></li>\r\n");
      out.write("\t\t<li><a href=\"cart_list.ord\">장바구니</a></li>\r\n");
      out.write("\t\t<li><a href=\"mypage.mem\">마이페이지</a></li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t<li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<h2>검색 창</h2>\r\n");
      out.write("\t<!-- js로 select의 값을 확인한 후 각 값에 따라 action을 달리 정해주면 되지않음? -->\r\n");
      out.write("\t<form name=\"frmSch\" action=\"#\" method=\"get\" >\r\n");
      out.write("\t<ul id=\"searchMain\">\r\n");
      out.write("\t\t<li><select class=\"hand\" id=\"search_kind\" name=\"sch_kind\">\r\n");
      out.write("\t\t\t<option value=\"상품\" ");
 if(sch_kind.equals("상품")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">일반상품</option>\r\n");
      out.write("\t\t\t<option value=\"펀딩\" ");
 if(sch_kind.equals("펀딩")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">펀딩상품</option>\r\n");
      out.write("\t\t\t<option value=\"도전\" ");
 if(sch_kind.equals("도전")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">도전펀딩</option>\r\n");
      out.write("\t\t </select></li>\r\n");
      out.write("\t\t<li><input type=\"text\"  id=\"search_bar\" name=\"keyword\" onkeydown=\"enterkey();\" value=\"");
      out.print( keyword );
      out.write("\" /></li>\r\n");
      out.write("\t\t<li><button type=\"image\" id=\"goSch\"><img src=\"img/search_btn_white.png\" width=\"25\" onclick=\"Examine()\" /></button></li>\r\n");
      out.write("<!-- \t\t<input type=\"image\" value=\"검색\" id=\"goSch\" onclick=\"Examine()\" />\t -->\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<h2>메인 메뉴</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<h2>SNS</h2>\r\n");
      out.write("\t<ul id=\"sns\">\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/instagram.png\" alt=\"인스타\" /></a></li>\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/facebook.jpg\" alt=\"페이스북\" /></a></li>\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/twitter.png\" alt=\"트위터\" /></a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</header>\r\n");
      out.write("<!-- div#header 영역 종료 -->\r\n");
      out.write("\r\n");
      out.write("<!-- nav 영역 시작 -->\r\n");
      out.write("<nav id=\"navBox\">\r\n");
      out.write("<ul id=\"navigation\">\r\n");
      out.write("\t<li><a href=\"pdt_list.pdt?cata=a\">가위</a></li>\r\n");
      out.write("\t<li><a href=\"pdt_list.pdt?cata=b\">문구</a></li>\r\n");
      out.write("\t<li><a href=\"pdt_list.pdt?cata=c\">주방</a></li>\r\n");
      out.write("\t<li><a href=\"pdt_list.pdt?cata=d\">etc</a></li>\r\n");
      out.write("\t<li><a href=\"chal_list.chal\">도전펀딩</a></li>\r\n");
      out.write("\t<li><a href=\"fdg_list.fdg\">펀딩하기</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- nav 영역 종료 -->\r\n");
      out.write("\n");
      out.write("</header>\n");
      out.write("<!-- ------------------------------------------------------------------------------------------------ -->\n");
      out.write("<div class=\"pdt_contents\" >\n");
      out.write("<br />\n");
      out.write("<h2 align=\"center\"></h2>\n");
      out.write("<br />\n");
      out.write("<!-- 상품 정렬 조건 -->\n");
      out.write("<p id=\"align\" align=\"right\">\n");
      out.write("\t<a href=\"pdt_list.pdt");
      out.print(args );
      out.write("&sort=reviewd\" ");
      out.print((pdtPageInfo.getSort().equals("reviewd") ? "class='bold'" : "") );
      out.write(">인기순</a>&nbsp;\n");
      out.write("\t<a href=\"pdt_list.pdt");
      out.print(args );
      out.write("&sort=salecntd\" ");
      out.print((pdtPageInfo.getSort().equals("salecntd") ? "class='bold'" : "") );
      out.write(">판매량순</a>&nbsp;\n");
      out.write("\t<a href=\"pdt_list.pdt");
      out.print(args );
      out.write("&sort=priced\" ");
      out.print((pdtPageInfo.getSort().equals("priced") ? "class='bold'" : "") );
      out.write(">높은 가격순</a>&nbsp;\n");
      out.write("\t<a href=\"pdt_list.pdt");
      out.print(args );
      out.write("&sort=pricea\" ");
      out.print((pdtPageInfo.getSort().equals("pricea") ? "class='bold'" : "") );
      out.write(">낮은 가격순</a>&nbsp;\n");
      out.write("</p>\n");
      out.write("<!-- 상품 목록 시작  -->\n");

if(pdtList.size() > 0){
// 상품 검색결과가 있으면
	for(int i = 0 ;i < pdtList.size(); i++){
		ProductInfo pi = pdtList.get(i);
		String lnk = null;
		if(pi.getPi_stock() != 0){		
			lnk = "<a href=\"pdt_view.pdt" + args + "&piid=" + pi.getPi_id() + "&sort=" + pdtPageInfo.getSort() +
					"&psize=" +pdtPageInfo.getPsize() + "\">";
		} else{		
			lnk = "<a href=\"javascript:alert('품절된 상품입니다.');\">";
		} 
		
		if(pdtPageInfo.getPsize() == 12) {
		
			if(i % 3 == 0)		out.println("<div align='center'>");
		
		// 숫자에 콤마 찍기위한 인스턴스
		DecimalFormat decFormat = new DecimalFormat("###,###");
		int price = pi.getPi_price();

      out.write("\n");
      out.write("\n");
      out.write("<div class=\"pdt\">\n");
      out.write("\t<div id=\"pdt_img_box\">\n");
      out.write("\t\t<div id=\"pdt_img\">");
      out.print(lnk );
      out.write("<img src=\"page/product/img/");
      out.print(pi.getPi_img1() );
      out.write("\" style=\"width:350px; height:350px; padding-bottom:10px;\" /></div>\n");
      out.write("\t\t<button type=\"button\" id=\"pdt_zzim\" value=\"하트\"><img src=\"img/pdt_heart_empty.png \" width=\"28px\" height=\"24px\"/></button>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"pdt_title\"><span id=\"pdt_name\">");
      out.print(pi.getPi_name() );
      out.write("</span></a>\n");
      out.write("\t");
 if(pi.getPi_soldout().equals("y")) { 
      out.write("<span id =\"pdt_soldout\">품절</span>  ");
 } 
      out.write(" <br />\t\n");
      out.write("\t");
 if(pi.getPi_discount() != 0){ 
      out.write("\n");
      out.write("\t<span id=\"pdt_price1\">");
      out.print(decFormat.format(price) );
      out.write("원</span>\n");
      out.write("\t");
 } 
      out.write("  \n");
      out.write("\t<span id=\"pdt_price2\">");
      out.print(decFormat.format((int)(pi.getPi_price() * (1-pi.getPi_discount()))) );
      out.write("원</span></div>\n");
      out.write("</div>\n");
      out.write("\n");

			if(i % 4 == 3) 	out.println("</div>");
			if(i == pdtList.size() - 1 && i % 4 != 3){	
				// 현재 출력하는 데이터가 pdtList의 마지막 데이터이면서 3칸을 모두 채우지 못했을 경우
				out.println("</div>");
	}
  }
}

}else{
	out.println("<div>검색된 상품이 없습니다.</div>");
}

      out.write('\n');
      out.write('\n');

if (pdtList.size() > 0){
// 상품 검색결과가 있으면 페이지 번호를 출력
	out.println("<div class='page_wrapper'>");
	out.println("<p style='font-size:1.25em; width:100%;' align='center'>");

	args = "?sort=" + pdtPageInfo.getSort() + "&psize=" + pdtPageInfo.getPsize() + schargs;
	
		if(pdtPageInfo.getCpage() == 1){				
			out.println("[&lt;&lt;]&nbsp;&nbsp;[&lt;]&nbsp;&nbsp;");
		}else{
			out.print("<a href='pdt_list.pdt" + args + "&cpage=1'>[&lt;&lt;]</a>&nbsp;&nbsp;");
			out.println("<a href='pdt_list.pdt" + args + "&cpage=" + (pdtPageInfo.getCpage() - 1) + "'>[&lt;]</a>&nbsp;&nbsp;");
		}
		
		for(int i=1, j=pdtPageInfo.getSpage(); i<= pdtPageInfo.getBsize() && j <= pdtPageInfo.getEpage(); i++, j++){
		// i : 루프 돌릴 횟수 검사하는 용도의 변수, j : 페이지 번호 출력용 변수
			if(pdtPageInfo.getCpage() == j){
				out.print("&nbsp;<strong>" + j + "</strong>&nbsp;");
			}else{
				out.print("&nbsp;<a href='pdt_list.pdt" +args + "&cpage=" +j + "'>" + j + "</a>&nbsp;");
			}
		}
		
		
		if(pdtPageInfo.getCpage() == pdtPageInfo.getPcnt()){
			out.println("&nbsp;&nbsp;[&gt;]&nbsp;&nbsp;[&gt;&gt;]");
		}else{
			out.print("&nbsp;&nbsp;<a href='pdt_list.pdt" + args + "&cpage=" + (pdtPageInfo.getCpage() + 1 ) + "'>[&gt;]</a>");
			out.println("&nbsp;&nbsp;<a href='pdt_list.pdt" +args + "&cpage=" + (pdtPageInfo.getPcnt()) + "'>[&gt;&gt;]</a>");
		}

	out.println("</p>");
	out.println("</div>");
}

      out.write("\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<!-- ------------------------------------------------------------------------------------------------ -->\n");
      out.write("</main>\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\n");
      out.write("<footer>\n");
      out.write("\t<!-- footerInner영역 시작 -->\n");
      out.write("\t<div class=\"footerInner\">\n");
      out.write("\t\t<div class=\"corp_area\">\n");
      out.write("\t\t\t<ul class=\"corp_list\">\n");
      out.write("\t\t\t\t<li><a href=\"#\">이용 약관</a></li> |\n");
      out.write("\t\t\t\t<li><a href=\"#\">개인정보 처리방침</a></li> |\n");
      out.write("\t\t\t\t<li><a href=\"#\">고객센터</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"company_info_area\">\n");
      out.write("\t\t<img src=\"img/logo_long.png\" width=\"191px\" height=\"59px\" alt=\"Logo\" class=\"footerLogo\"/>\n");
      out.write("\t\t\t<div class=\"ci_area\">\n");
      out.write("\t\t\t\t<ul class=\"company_info\">\n");
      out.write("\t\t\t\t\t<li>회사명&nbsp;(주)왼손잡상점</li>&nbsp;&nbsp;|&nbsp;&nbsp;\n");
      out.write("\t\t\t\t\t<li>대표이사&nbsp;이지윤</li>&nbsp;&nbsp;|&nbsp;&nbsp;\n");
      out.write("\t\t\t\t\t<li>주소&nbsp;서울특별시 강남구 강남대로 428 만이빌딩 5, 10층</li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"ci_area\">\n");
      out.write("\t\t\t<ul class=\"company_info\">\n");
      out.write("\t\t\t\t<li>사업자 등록번호&nbsp;112-39-54678</li>&nbsp;&nbsp;|&nbsp;&nbsp;\n");
      out.write("\t\t\t\t<li>고객센터 전화번호&nbsp;1546-6557</li>&nbsp;&nbsp;|&nbsp;&nbsp;\n");
      out.write("\t\t\t\t<li>회사 이메일&nbsp;leftystore@lefty.com</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</footer>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
