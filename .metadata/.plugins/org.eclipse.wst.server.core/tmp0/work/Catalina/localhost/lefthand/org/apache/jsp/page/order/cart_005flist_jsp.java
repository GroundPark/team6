/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2021-12-05 09:23:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import java.util.*;
import vo.*;
import vo.*;

public final class cart_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/page/order/../../include/incMypage.jsp", Long.valueOf(1638692058228L));
    _jspx_dependants.put("/page/order/../../include/header.jsp", Long.valueOf(1638693570207L));
    _jspx_dependants.put("/page/order/../../include/footer.jsp", Long.valueOf(1637830442655L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t<!-- 돈 표기 -->\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- ----------- 나중에 vo.* 로 통합할 예정 ----------- -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/base.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/footer.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/mypage.css\" />\r\n");
      out.write("<script src=\"js/jquery-3.6.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 로그인 정보를 담은 인스턴스를 사용하기 위해 import -->\r\n");
      out.write("\t<!-- 멤버의 주소 정보를 담은 인스턴스를 사용하기 위해 import -->\r\n");
      out.write("\r\n");
      out.write("<!-- actionforward를 가 계속 겹치니까 vo를 src밑에 폴더로 vo파일안에 넣는 통합작업 해야함 -->\r\n");
      out.write("<!-- 1~2일뒤에 할예정이므로 일단 위에거 쓰셈 -->\r\n");
      out.write("<!-- 원래는 page import=\"member.vo.*\" 가 맞음!! -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("utf-8");

String sch_kind = request.getParameter("sch_kind");
if (sch_kind == null)	sch_kind = "";

String keyword = request.getParameter("keyword");
if (keyword == null)	keyword = "";

MemberInfo memberInfo = (MemberInfo)session.getAttribute("memberInfo");
boolean isLogin = false;
if (memberInfo != null)	isLogin = true;

      out.write("\r\n");
      out.write("<!-- #header 영역 시작 -->\r\n");
      out.write("<!-- 모든 사이트에서 적용되는 css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/base.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/footer.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"js/search.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"header\" class=\"header\">\r\n");
      out.write("\t<div id=\"logo\"><h1 class=\"logo\"><a href=\"index.jsp\"><img src=\"img/logo.png\" alt=\"로고\" class=\"logo\" /></a></h1></div>\r\n");
      out.write("\t<ul id=\"infoMenu\">\r\n");
 if(memberInfo == null) { 
      out.write("\r\n");
      out.write("\t\t<li><a href=\"#\">회원가입</a></li>\r\n");
      out.write("\t\t<li><a href=\"login_form.jsp\">로그인</a></li>\r\n");
      out.write("\t\t<li><a href=\"login_form.jsp?url=page/order/cart_list.ord\">장바구니</a></li>\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t<li>");
      out.print(memberInfo.getMi_name() );
      out.write(" 님, 안녕하세요.</li>\r\n");
      out.write("\t\t<li><a href=\"logout.jsp\">로그아웃</a></li>\r\n");
      out.write("\t\t<li><a href=\"cart_list.ord\">장바구니</a></li>\r\n");
      out.write("\t\t<li><a href=\"mypage.mem\">마이페이지</a></li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t<li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<h2>검색 창</h2>\r\n");
      out.write("\t<!-- js로 select의 값을 확인한 후 각 값에 따라 action을 달리 정해주면 되지않음? -->\r\n");
      out.write("\t<form name=\"frmSch\" action=\"#\" method=\"get\" >\r\n");
      out.write("\t<ul id=\"searchMain\">\r\n");
      out.write("\t\t<li><select class=\"hand\" id=\"search_kind\" name=\"sch_kind\">\r\n");
      out.write("\t\t\t<option value=\"상품\" ");
 if(sch_kind.equals("상품")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">일반상품</option>\r\n");
      out.write("\t\t\t<option value=\"펀딩\" ");
 if(sch_kind.equals("펀딩")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">펀딩상품</option>\r\n");
      out.write("\t\t\t<option value=\"도전\" ");
 if(sch_kind.equals("도전")) { 
      out.write(" selected=\"selected\" ");
 } 
      out.write(">도전펀딩</option>\r\n");
      out.write("\t\t </select></li>\r\n");
      out.write("\t\t<li><input type=\"text\"  id=\"search_bar\" name=\"keyword\" onkeydown=\"enterkey();\" value=\"");
      out.print( keyword );
      out.write("\" /></li>\r\n");
      out.write("\t\t<li><input type=\"button\" value=\"검색\" id=\"goSch\" onclick=\"Examine()\" /></li>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<h2>메인 메뉴</h2>\r\n");
      out.write("\t<ul id=\"navigation\">\r\n");
      out.write("\t\t<li><a href=\"pdt_list.pdt?cata=a\">가위</a></li>\r\n");
      out.write("\t\t<li><a href=\"pdt_list.pdt?cata=b\">문구</a></li>\r\n");
      out.write("\t\t<li><a href=\"pdt_list.pdt?cata=c\">주방</a></li>\r\n");
      out.write("\t\t<li><a href=\"pdt_list.pdt?cata=d\">etc</a></li>\r\n");
      out.write("\t\t<li><a href=\"chal_list.chal\">도전펀딩</a></li>\r\n");
      out.write("\t\t<li><a href=\"fdg_list.fdg\">펀딩하기</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<h2>SNS</h2>\r\n");
      out.write("\t<ul id=\"sns\">\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/instagram.png\" alt=\"인스타\" /></a></li>\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/facebook.jpg\" alt=\"페이스북\" /></a></li>\r\n");
      out.write("\t\t<li><a href=\"#\"><img src=\"img/twitter.png\" alt=\"트위터\" /></a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- div#header 영역 종료 -->\r\n");
      out.write("\r\n");
      out.write("</header>\r\n");

request.setCharacterEncoding("utf-8");
if (!isLogin) {
	out.println("<script>");
	out.println("alert('로그인 후 사용하세요.');");
	out.println("location.href='login_form.jsp?url=cart_list.ord';");
	out.println("</script>");
	out.close();
}

//[계속 쇼핑]버튼 클릭시 이동할 경로에 붙일 쿼리 스트링 생성
PdtPageInfo pageInfo = (PdtPageInfo)request.getAttribute("pdtPageInfo");
String args = "?cpage=" + pageInfo.getCpage() + "&psize=" + pageInfo.getPsize();
if (pageInfo.getKeyword() != null && !pageInfo.getKeyword().equals(""))	args += "&keyword=" + pageInfo.getKeyword();
if (pageInfo.getCata() != null && !pageInfo.getCata().equals(""))		args += "&cata=" + pageInfo.getCata();
if (pageInfo.getSort() != null && !pageInfo.getSort().equals(""))		args += "&sort=" + pageInfo.getSort();

//현 화면에서 보여줄 장바구니에 담긴 상품들의 목록
ArrayList<CartInfo> cartList = (ArrayList<CartInfo>)request.getAttribute("cartList");
CartInfo cart = new CartInfo();	

DecimalFormat formatter = new DecimalFormat("#,##0");

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function chkAll(all) {\t\r\n");
      out.write("// 목록의 체크박스를 클릭하면 아래 체크박스가 모두 클릭되도록 하는 함수\r\n");
      out.write("  var arrChk = document.frmCart.chk;\t// 폼(frmCart) 안에 chk라는 이름의 컨트롤이 여러 개 있으므로 배열로 받아옴\r\n");
      out.write("  for (var i = 1 ; i < arrChk.length ; i++) {\t// 0번은 hidden이므로 1번부터 도는 것도 좋음\r\n");
      out.write("\t  arrChk[i].checked = all.checked;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function choose(chk) {\t\r\n");
      out.write("// 아래 체크박스들 중 하나라도 풀리면 맨 위 목록의 all 체크박스가 해제되도록 하는 함수\r\n");
      out.write("  if (!chk.checked) {\t// chk가 체크가 풀렸으면\r\n");
      out.write("\t  var all = document.frmCart.all;\r\n");
      out.write("\t  all.checked = false;\t// all 체크가 풀리도록\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function chCount(pocidx, poccnt) {\t\r\n");
      out.write("// 장바구니 내의 특정 상품 수량을 변경시키는 함수(pocidx는 pk로, 변경시 where절의 조건으로 사용, poccnt:변경할 수량 값)\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype : \"POST\",\t\t\t\t\t\t\r\n");
      out.write("\t\turl : \"/cart_proc.ord");
      out.print(args );
      out.write("\",\r\n");
      out.write("\t\tdata : {\"wtype\" : \"up\", \"pocidx\" : pocidx, \"poccnt\" : poccnt},\r\n");
      out.write("\t\tsuccess : function(chkRs) {\t\t\t\r\n");
      out.write("\t\t\tif (chkRs == 0) alert(\"선택한 상품 수량 변경에 실패했습니다.\\n새로 고침 후 다시 시도해 주십시오.\");\r\n");
      out.write("\t\t\telse \t\t\tlocation.reload();\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getSelectedValues() {\r\n");
      out.write("// chk 체크박스들에서 선택한 체크박스의 값들만 추출하여 문자열로 리턴하는 함수(선택 상품 삭제와 선택 상품 구매에서 사용됨)\r\n");
      out.write("\tvar arrChk = document.frmCart.chk;\t// 문서 내의 frmCart 폼 안에 있는 컨트롤들 중 chk라는 이름을 가진 컨트롤들을 배열로 받아옴(단, chk라는 이름의 컨트롤이 하나밖에 없으면 배열은 생성되지 않음)\r\n");
      out.write("\tvar idxs = \"\";\t// chk 배열에서 추출한 값들을 저장할 변수\r\n");
      out.write("\tfor (var i = 1 ; i < arrChk.length ; i++) {\t// 0번 인덱스가 아닌 1번부터 시작하는 이유는 chk라는 이름의 첫번째 컨트롤이 hidden이므로\r\n");
      out.write("\t\tif (arrChk[i].checked)\tidxs += \",\" + arrChk[i].value;\r\n");
      out.write("\t\t// 체크된 체크박스의 value들만 추출하여 idxs에 누적 저장\r\n");
      out.write("\t}\r\n");
      out.write("\treturn idxs.substring(1);\t// idxs 변수에 누적된 문자열의 맨 앞에 있는 구분자(,)를 제거한 후 리턴\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function buyChk() {\t\t// 선택한 상품 구매 버튼 클릭 시 \r\n");
      out.write("\tvar pocidx = getSelectedValues();\r\n");
      out.write("\tif (pocidx != \"\") {\t// 구매하기 위해 선택할 상품이 있을 경우\r\n");
      out.write("\t\tvar frm = document.frmCart;\r\n");
      out.write("\t\tfrm.pocidx.value = pocidx;\r\n");
      out.write("\t\tfrm.submit();\r\n");
      out.write("\t} else {\t// 선택할 상품이 없을 경우\r\n");
      out.write("\t\talert(\"구매할 상품을 하나 이상 선택하세요.\");\t\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function buyAll() {\t\t// 전체 상품 구매 버튼 클릭 시 \r\n");
      out.write("\tvar pocidx = \"\";\r\n");
      out.write("\tvar frm = document.frmCart;\r\n");
      out.write("\tfrm.pocidx.value = pocidx;\r\n");
      out.write("\tfrm.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function callDel(pocidx) {\t// 삭제 버튼 클릭 시\r\n");
      out.write("\tvar isConfirm = false;\r\n");
      out.write("\tif (pocidx == 0) {\t// 선택한 상품(들) 삭제 시(여러 상품 선택 시 여러 개의 poc_idx를 쉼표로 연결하여 문자열 생성, 상품을 하나도 선택하지 않았으면 경고메시지 출력)\r\n");
      out.write("\t\tpocidx = getSelectedValues();\t// 삭제하려고 선택한 poc_idx값을 받아옴\r\n");
      out.write("\t\tif (pocidx != \"\") {\t// 삭제할 상품들의 인덱스가 있으면\r\n");
      out.write("\t\t\tisConfirm = confirm(\"선택한 상품들을 장바구니에서 삭제하시겠습니까?\");\r\n");
      out.write("\t\t} else {\t// 삭제할 상품들의 인덱스가 없으면\r\n");
      out.write("\t\t\talert(\"삭제할 상품을 하나 이상 선택하세요.\");\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} else {\t// 특정 상품 삭제 시\r\n");
      out.write("\t\tisConfirm = confirm(\"해당 상품을 장바구니에서 삭제하시겠습니까?\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif (isConfirm) {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"POST\",\t\t\t\t\t\t\r\n");
      out.write("\t\t\turl : \"/cart_proc.ord");
      out.print(args );
      out.write("\",\r\n");
      out.write("\t\t\tdata : {\"wtype\" : \"del\", \"pocidx\" : pocidx},\r\n");
      out.write("\t\t\tsuccess : function(chkRs) {\t\t\t\r\n");
      out.write("\t\t\t\tif (chkRs == 0) alert(\"선택한 상품 삭제에 실패했습니다.\\n새로 고침 후 다시 시도해 주십시오.\");\r\n");
      out.write("\t\t\t\telse \t\t\tlocation.reload();\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- mypage 영역 시작 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");

String grade = "Silver";
if (memberInfo.getMi_grade().equals("b"))		grade = "Gold";
else if (memberInfo.getMi_grade().equals("c"))	grade = "Diamond";

      out.write("\r\n");
      out.write("<!-- nav 영역 시작 -->\r\n");
      out.write("<!-- memberInfo에 빨간줄 신경 ㄴㄴ -->\r\n");
      out.write("<section id=\"mypageBox\">\r\n");
      out.write("<nav id=\"mypage\">\r\n");
      out.write("  <ul id=\"mypageMenu\">\r\n");
      out.write("\t <li class=\"myMenu1\">\r\n");
      out.write("\t\t<p class=\"grouping\">내 쇼핑</p>\r\n");
      out.write("\t\t<ul class=\"myMenu2\">\r\n");
      out.write("\t\t   <li><a href=\"#\">주문/배송조회</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">취소/반품/교환 내역</a></li>\r\n");
      out.write("\t\t   <li><a href=\"cart_list.ord\">장바구니</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">좋아요</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">공감</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">포인트</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t </li>\r\n");
      out.write("\t <li class=\"myMenu1\">\r\n");
      out.write("\t\t<p class=\"grouping\">내 활동</p>\r\n");
      out.write("\t\t<ul class=\"myMenu2\">\r\n");
      out.write("\t\t   <li><a href=\"#\">1:1 문의내역</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">도전펀딩 내역</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">마이펀딩 내역</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t </li>\r\n");
      out.write("\t <li class=\"myMenu1\">\r\n");
      out.write("\t\t<p class=\"grouping\">내 정보</p>\r\n");
      out.write("\t\t<ul class=\"myMenu2\">\r\n");
      out.write("\t\t   <li><a href=\"#\">회원정보 수정</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">주소록 관리</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">비밀번호 변경</a></li>\r\n");
      out.write("\t\t   <li><a href=\"#\">회원 탈퇴</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- nav 영역 종료 -->\t\r\n");
      out.write("<!-- 간단 정보 영역 시작 -->\r\n");
      out.write("<article>\r\n");
      out.write("<div id=\"simpleInfo\">\r\n");
      out.write("<span><strong class=\"highlight\">");
      out.print(memberInfo.getMi_name() );
      out.write("</strong> 님 반갑습니다.</span>\r\n");
      out.write("<span>보유포인트 <strong class=\"highlight\">");
      out.print(memberInfo.getMi_point() );
      out.write("</strong> p</span>\r\n");
      out.write("<span>등급 <strong class=\"highlight\">");
      out.print(grade );
      out.write("</strong></span>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("<!-- mypage 영역 종료 -->\r\n");
      out.write("</article>\t\r\n");
      out.write("<!-- 간단 정보 영역 종료 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 장바구니 리스트 영역 시작 -->\r\n");
      out.write("<article id=\"cartListBox\">\r\n");
      out.write("<h2>장바구니 ( ");
      out.print(cartList.size() );
      out.write(" )</h2><br />\r\n");
      out.write("<form name=\"frmCart\" action=\"order_form.ord\" method=\"post\">\r\n");
      out.write("<input type=\"hidden\" name=\"chk\" value=\"\" />\t<!-- 장바구니에 하나만 담겼을 경우는 배열이 아니기 때문에 걔를 배열로 만들어주려고 -->\r\n");
      out.write("<input type=\"hidden\" name=\"pocidx\" value=\"\" />\r\n");
      out.write("<table width=\"950\" cellpadding=\"10\" cellspacing=\"0\" id=\"cartTable\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th width=\"5%\"><input type=\"checkbox\" name=\"all\" checked=\"checked\" onclick=\"chkAll(this);\" /></th>\r\n");
      out.write("<th width=\"15%\">상품</th><th width=\"*\">상품명</th>\r\n");
      out.write("<th width=\"10%\">수량</th><th width=\"20%\">구매가</th><th width=\"10%\">삭제</th>\r\n");
      out.write("</tr>\r\n");

if (cartList.size() > 0) {	// 장바구니에 상품이 들어 있으면
	int total = 0;	// 총 구매가격을 저장할 변수
	int delipay = 0;	// 배송비를 저장할 변수
	for (int i = 0 ; i < cartList.size() ; i++) {
		cart = cartList.get(i);
		String lnk = "<a href='pdt_view.pdt" + args + "&piid=" + cart.getPi_id() + "'>";
		
		int max = cart.getPi_stock();	// 남은 재고량
		if (max == -1 || max > 100)		max = 100;	// 재고가 무제한이거나 100을 넘을 경우 최대값으로 100을 지정

      out.write("\r\n");
      out.write("<tr align=\"center\">\r\n");
      out.write("<td><input type=\"checkbox\" name=\"chk\" value=\"");
      out.print(cart.getPoc_idx() );
      out.write("\" checked=\"checked\" onclick=\"choose(this);\" /></td>\r\n");
      out.write("<td align=\"center\">\r\n");
      out.write("\t");
      out.print(lnk );
      out.write("<img src=\"page/product/img/");
      out.print(cart.getPi_img1() );
      out.write("\" width=\"100\" height=\"100\" align=\"absmiddle\" /></a>\r\n");
      out.write("\t<!-- 합본이랑 민지씨 환경 다른거 주의 : 합본은 앞에 안붙이고... 민지씨 환경에서는 / 붙여야함 -->\r\n");
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(cart.getPi_name() );
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("\t<select name=\"cnt");
      out.print(cart.getPoc_idx() );
      out.write("\" class=\"optCmb\" onchange=\"chCount(");
      out.print(cart.getPoc_idx() );
      out.write(", this.value);\">\r\n");
		for (int j = 1 ; j <= max ; j++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(j );
      out.write('"');
      out.write(' ');
 if (j == cart.getPoc_cnt()) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(j );
      out.write("</option>\r\n");
 		} 
      out.write("\r\n");
      out.write("\t</select>\r\n");
      out.write("</td>\r\n");
      out.write("<td><del>");
      out.print(formatter.format(cart.getPi_price() * cart.getPoc_cnt())  );
      out.write("</del><br />\r\n");
      out.write("<strong class=\"highlight2\">");
      out.print(formatter.format(((cart.getPi_price() * (1 - cart.getPi_discount())) * cart.getPoc_cnt())));
      out.write("</strong></td>\r\n");

	total += ((cart.getPi_price() * (1 - cart.getPi_discount())) * cart.getPoc_cnt());
	
	if (total < 30000)	delipay = 2500;
	else				delipay = 0;

      out.write("\r\n");
      out.write("<td><input type=\"button\" value=\"삭제\" class=\"btn\" id=\"delBtn\" onclick=\"callDel(");
      out.print(cart.getPoc_idx() );
      out.write(");\" /></td>\r\n");
      out.write("</tr>\r\n");

}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<table width=\"950\" cellpadding=\"15\" cellspacing=\"0\">\r\n");
      out.write("<tr>\r\n");
      out.write("<td width=\"*\" height=\"50px\">\r\n");
      out.write("\t<input type=\"button\" value=\"선택 상품 구매\" class=\"btn\" onclick=\"buyChk();\"/>\r\n");
      out.write("\t<input type=\"button\" value=\"선택 상품 삭제\" class=\"btn\" onclick=\"callDel(0);\" />\r\n");
      out.write("</td>\r\n");
      out.write("<td width=\"400\" align=\"right\">총 구매가격 : ");
      out.print(formatter.format(total) );
      out.write(' ');
      out.write('+');
      out.write(' ');
      out.print(formatter.format(delipay) );
      out.write(" (배송비) = <strong id=\"total\">");
      out.print(formatter.format(total + delipay) );
      out.write("</strong> 원</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t<input type=\"button\" value=\"계속 쇼핑\" class=\"btn\" onclick=\"location.href='pdt_list.pdt");
      out.print(args );
      out.write("';\" />&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"button\" value=\"전체 구매\" class=\"btn\" onclick=\"buyAll();\"/>\r\n");
      out.write("</td></tr>\r\n");

} else {	// 장바구니가 비었으면

      out.write("\r\n");
      out.write("<tr><td colspan=\"6\" align=\"center\">장바구니가 비었습니다.</td></tr>\r\n");
      out.write("<tr><td colspan=\"6\" align=\"center\">\r\n");
      out.write("\t<input type=\"button\" value=\"계속 쇼핑\" onclick=\"location.href='pdt_list.pdt");
      out.print(args );
      out.write("';\" />\r\n");
      out.write("</td></tr>\r\n");

}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</article>\r\n");
      out.write("<!-- 장바구니 리스트 영역 종료 -->\r\n");
      out.write("</section>\r\n");
      out.write("<!-- footer 영역 시작 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("\t<!-- footerInner영역 시작 -->\r\n");
      out.write("\t<div class=\"footerInner\">\r\n");
      out.write("\t\t<div class=\"corp_area\">\r\n");
      out.write("\t\t\t<ul class=\"corp_list\">\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">이용 약관</a></li> |\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">개인정보 처리방침</a></li> |\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"company_info_area\">\r\n");
      out.write("\t\t<img src=\"img/logo_long.png\" width=\"191px\" height=\"59px\" alt=\"Logo\" class=\"footerLogo\"/>\r\n");
      out.write("\t\t\t<div class=\"ci_area\">\r\n");
      out.write("\t\t\t\t<ul class=\"company_info\">\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">회사명</a></li> |\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">대표이사</a></li> |\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">회사 주소</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"ci_area\">\r\n");
      out.write("\t\t\t<ul class=\"company_info\">\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">사업자 등록번호</a></li> |\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">사업자 정보</a></li> |\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">고객센터 전화번호</a></li> |\r\n");
      out.write("\t\t\t\t<li><a href=\"#\">회사 이메일</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<!-- footer 영역 종료 -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
