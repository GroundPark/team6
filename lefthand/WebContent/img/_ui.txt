//////////////////////////////////////////
개발자는 기획회의 참여필수... UIUX는 기획자가하긴하는데 개발자도 눈팅은 하는정도

안될거같은 기획/설계는 개발자가 컷하거나 조정해야함

유일한 사이트(예를들어 관공서,  자기 학교 같은곳)는 어쩔수없지만 웹 사이트는 주제에따라 다 비슷비슷한 접근성을 가지고있음

웹 사이트에선 사용자는 귀찮은것, 느린것 제일 싫어함

개발자가 개발관련 이외의 질문, 상황;디자인에 대해서 모르면 모른다하면 됨

//////////////////////////////////////////

UI(User Interface) : 사용자 접근(사용) 방식
1) UI 설계 원칙
   - 직관성 : 누구나 쉽게 이해하고 사용할 수 있어야 함
   - 유효성 : 사용자의 목적을 정확하게 달성해야 함
   - 학습성 : 누구나 쉽게 배우고 익힐 수 있어야 함
   - 유연성 : 사용자의 요구사항을 최대한 수용하여, 오류는 최소화하여야 함

2) UI 설계지침
   - 사용자 중심 : 사용자가 이해하기 편하고 쉽게 사용할 수 있는 환경을 제공. 실사용자에 대한 이해가 바탕이 돼야 함
   - 일관성 : 버튼이나 조작 방법을 사용자가 기억하고 쉽고 빠른 습득이 가능하게 설계해야 함
   - 단순성 : 조작 방법은 가장 간단하게 작동이 가능하도록 하여 인지적 부담을 감소시켜야 함								// 헷갈리지않게
   - 결과 예측 가능 : 작동시킬 기능만 보고 결과 예측이 가능해야 함
   - 가시성 : 주요 기능을 메인 화면에 노출하여 조작이 쉽도록 해야 함						// 첫화면 이야기이긴한데 뭔가 너무많으면 또 안좋음. 트렌드 : 옛날엔 엄청많이 보여줬지만 요즘은 간단하게
   - 표준화 : 디자인을 표준화하여 기능 구조의 선행 학습 이후 쉽게 사용할 수 있어야 함
   - 접근성 : 사용자의 직무, 연령, 성별 등 다양한 계층을 수용해야 함
   - 명확성 : 사용자가 개념적으로 쉽게 인지해야 함
   - 오류 발생 해결 : 사용자가 오류에 대한 상황을 정확히 인지할 수 있어야 함					// 예를들어 404에러 페이지

3) UI 요구사항
   - 데이터 요구 : 사용자가 요구하는 모델과 객체들의 주요한 특성에 기반한 데이터 객체들을 정리함
   - 기능 요구 : 사용자의 목적 달성을 위해 무엇을 실행해야 하는지를 동사형으로 설명함. 기능 요구 리스트로 정리함. 최대한 철저해야 함
   - 제품, 서비스의 품질 : 데이터 및 기능 요구 외에 중요하게 고려할 속성중에 제품 품질이 있음. 여기에 감성적인 품질도 고려함
   - 제약 사항 : 제품 출시의 데드라인, 개발 및 제작에 드는 비용, 시스템 준수에 필요한 규제가 포함됨, 사전에 제약사항의 변경 여부를 확인함



UI 프로토타입(prototype)
   - 새로운 컴퓨터 시스템이나 소프트웨어의 설계 또는 성능, 구현 가능성, 운용 가능성을 평가하거나 요구 사항을 좀 더 잘 이해하고 결정하기 위해 전체적인 기능은 간략한 형태로 구현한 시제품
   - 사용자의 요구사항이 모두 정확하게 반영될 때까지 계속해 개선, 보완됨
   - 정적인 스토리보드에 동적인 움직임을 추가한 개념

1) UI 프로토타입의 장점
   - 사용자(클라이언트) 설득과 이해가 쉬움							// 여기서 사용자는 웹사이트 이용자가 아니라 사장, 웹사이트 어드민
   - 개발 시간이 감소
   - 오류를 사전에 발견할 수 있음

2) UI 프로토타입의 단점
   - 너무 많은 수정 과정을 거치면 오히려 작업 시간이 늘어남. 사용자의 요구사항은 가능한 들어주지만 적절한 타협 필요함
   - 자원 효율성 관점에서 보면 필요 이상으로 자원을 많이 소모함
   - 정확한 문서 작업(주석 포함)이 생략될 수 도있음

// 여기서 수정은 있는거에서 조금 조정 이런게 아니라 그냥 다시하나 만드는 정도의 노동임
// 프로토타입 개념은 좋긴한데 실무적으로 현실성이 떨어짐. 시간이 부족함

3) UI 프로토타입 작성 도구
   - 아날로그 방식 : 화이트보드, 펜, 종이 등을 이용하여 손으로 그려 작업
   - 디지털 방식 : 파워포인트, 아크로뱃, 비지오, Invision, Marvel, Abode Xd, HTML 등의 툴

4) UI 프로토타입 작성 시 고려 사항
   - 계획 작성 : 계획을 수립하는 과정과 실행 후 결과를 보고하는 흐름으로 진행됨. 프로토타입 계획을 세울때 고려할 부분과 결과서를 작설할 때 고려할 부분 생각해야함
   - 범위 확인 : 프로젝트의 범위나 리스크 상황 등의 주변 여건을 감안해 정함. 프로토타입 팀을 별도로 구성 할 수 있는지 반드시 확인해야 함
   - 목표 확인 : 프로토타입을 통해 얻고자 하는 목표를 미리 명확하게 준비해야 함. 기능관련? 성능관련? 개발 환경 관련? 등 고객과 협의해 명확하게 준비, 진행해야함
   - 기간 및 비용 확인 : 기간 및 비용은 최소화하여 목적을 달성할 수 있도록 계획해야함. 검증 범위나 기간을 넓고 길게잡으면 고객의 목표가 너무 커져 오히려 문제됨
   - 산출물 확인 : 프로토타입에서 나오는 산출물은 실제 개발에서 참조될수 있는 수준이어야함. 프로토타입용 UI를 실제 개발에 쓰는건 안좋음
   - 유의 사항 확인 : 작은범위, 적은 인원을 가지고 최소 기간내에 위험요소를 생각하면서 진행해야함 



